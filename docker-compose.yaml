version: '3.9'
services:
  reactfront:
    container_name: reactfront
    build: ./frontend
    expose:
      - 3000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
  expressback:
    container_name: expressback
    build: ./backend
    expose:
      - 8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
  nginx:
    build: ./nginx
    expose:
      - 80
    ports:
      - "80:80"
    links:
      - reactfront
      - expressback
      - nginx-proxy
      - letsencrypt
    environment: 
      - VIRTUAL_HOST=ec2-54-94-25-199.sa-east-1.compute.amazonaws.com,ec2-54-94-25-199.sa-east-1.compute.amazonaws.com
      - LETSENCRYPT_HOST=ec2-54-94-25-199.sa-east-1.compute.amazonaws.com,ec2-54-94-25-199.sa-east-1.compute.amazonaws.com
    restart: always
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - certs:/etc/nginx/certs:ro
        - vhostd:/etc/nginx/vhost.d
        - html:/usr/share/nginx/html
    labels:
        - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      restart: always
      environment:
          - NGINX_PROXY_CONTAINER=nginx-proxy
      volumes:
        - certs:/etc/nginx/certs:rw
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - vhostd:/etc/nginx/vhost.d
        - html:/usr/share/nginx/html
volumes:
  certs:
  html:
  vhostd: